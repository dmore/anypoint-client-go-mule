/*
 * Identity Provider Management API
 *
 * Description of Identity Provider API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package idp

import (
	"encoding/json"
)

// ClaimsMapping struct for ClaimsMapping
type ClaimsMapping struct {
	EmailAttribute *string `json:"email_attribute,omitempty"`
	GroupAttribute *string `json:"group_attribute,omitempty"`
	LastnameAttribute *string `json:"lastname_attribute,omitempty"`
	UsernameAttribute *string `json:"username_attribute,omitempty"`
	FirstnameAttribute *string `json:"firstname_attribute,omitempty"`
}

// NewClaimsMapping instantiates a new ClaimsMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClaimsMapping() *ClaimsMapping {
	this := ClaimsMapping{}
	return &this
}

// NewClaimsMappingWithDefaults instantiates a new ClaimsMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClaimsMappingWithDefaults() *ClaimsMapping {
	this := ClaimsMapping{}
	return &this
}

// GetEmailAttribute returns the EmailAttribute field value if set, zero value otherwise.
func (o *ClaimsMapping) GetEmailAttribute() string {
	if o == nil || o.EmailAttribute == nil {
		var ret string
		return ret
	}
	return *o.EmailAttribute
}

// GetEmailAttributeOk returns a tuple with the EmailAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimsMapping) GetEmailAttributeOk() (*string, bool) {
	if o == nil || o.EmailAttribute == nil {
		return nil, false
	}
	return o.EmailAttribute, true
}

// HasEmailAttribute returns a boolean if a field has been set.
func (o *ClaimsMapping) HasEmailAttribute() bool {
	if o != nil && o.EmailAttribute != nil {
		return true
	}

	return false
}

// SetEmailAttribute gets a reference to the given string and assigns it to the EmailAttribute field.
func (o *ClaimsMapping) SetEmailAttribute(v string) {
	o.EmailAttribute = &v
}

// GetGroupAttribute returns the GroupAttribute field value if set, zero value otherwise.
func (o *ClaimsMapping) GetGroupAttribute() string {
	if o == nil || o.GroupAttribute == nil {
		var ret string
		return ret
	}
	return *o.GroupAttribute
}

// GetGroupAttributeOk returns a tuple with the GroupAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimsMapping) GetGroupAttributeOk() (*string, bool) {
	if o == nil || o.GroupAttribute == nil {
		return nil, false
	}
	return o.GroupAttribute, true
}

// HasGroupAttribute returns a boolean if a field has been set.
func (o *ClaimsMapping) HasGroupAttribute() bool {
	if o != nil && o.GroupAttribute != nil {
		return true
	}

	return false
}

// SetGroupAttribute gets a reference to the given string and assigns it to the GroupAttribute field.
func (o *ClaimsMapping) SetGroupAttribute(v string) {
	o.GroupAttribute = &v
}

// GetLastnameAttribute returns the LastnameAttribute field value if set, zero value otherwise.
func (o *ClaimsMapping) GetLastnameAttribute() string {
	if o == nil || o.LastnameAttribute == nil {
		var ret string
		return ret
	}
	return *o.LastnameAttribute
}

// GetLastnameAttributeOk returns a tuple with the LastnameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimsMapping) GetLastnameAttributeOk() (*string, bool) {
	if o == nil || o.LastnameAttribute == nil {
		return nil, false
	}
	return o.LastnameAttribute, true
}

// HasLastnameAttribute returns a boolean if a field has been set.
func (o *ClaimsMapping) HasLastnameAttribute() bool {
	if o != nil && o.LastnameAttribute != nil {
		return true
	}

	return false
}

// SetLastnameAttribute gets a reference to the given string and assigns it to the LastnameAttribute field.
func (o *ClaimsMapping) SetLastnameAttribute(v string) {
	o.LastnameAttribute = &v
}

// GetUsernameAttribute returns the UsernameAttribute field value if set, zero value otherwise.
func (o *ClaimsMapping) GetUsernameAttribute() string {
	if o == nil || o.UsernameAttribute == nil {
		var ret string
		return ret
	}
	return *o.UsernameAttribute
}

// GetUsernameAttributeOk returns a tuple with the UsernameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimsMapping) GetUsernameAttributeOk() (*string, bool) {
	if o == nil || o.UsernameAttribute == nil {
		return nil, false
	}
	return o.UsernameAttribute, true
}

// HasUsernameAttribute returns a boolean if a field has been set.
func (o *ClaimsMapping) HasUsernameAttribute() bool {
	if o != nil && o.UsernameAttribute != nil {
		return true
	}

	return false
}

// SetUsernameAttribute gets a reference to the given string and assigns it to the UsernameAttribute field.
func (o *ClaimsMapping) SetUsernameAttribute(v string) {
	o.UsernameAttribute = &v
}

// GetFirstnameAttribute returns the FirstnameAttribute field value if set, zero value otherwise.
func (o *ClaimsMapping) GetFirstnameAttribute() string {
	if o == nil || o.FirstnameAttribute == nil {
		var ret string
		return ret
	}
	return *o.FirstnameAttribute
}

// GetFirstnameAttributeOk returns a tuple with the FirstnameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimsMapping) GetFirstnameAttributeOk() (*string, bool) {
	if o == nil || o.FirstnameAttribute == nil {
		return nil, false
	}
	return o.FirstnameAttribute, true
}

// HasFirstnameAttribute returns a boolean if a field has been set.
func (o *ClaimsMapping) HasFirstnameAttribute() bool {
	if o != nil && o.FirstnameAttribute != nil {
		return true
	}

	return false
}

// SetFirstnameAttribute gets a reference to the given string and assigns it to the FirstnameAttribute field.
func (o *ClaimsMapping) SetFirstnameAttribute(v string) {
	o.FirstnameAttribute = &v
}

func (o ClaimsMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EmailAttribute != nil {
		toSerialize["email_attribute"] = o.EmailAttribute
	}
	if o.GroupAttribute != nil {
		toSerialize["group_attribute"] = o.GroupAttribute
	}
	if o.LastnameAttribute != nil {
		toSerialize["lastname_attribute"] = o.LastnameAttribute
	}
	if o.UsernameAttribute != nil {
		toSerialize["username_attribute"] = o.UsernameAttribute
	}
	if o.FirstnameAttribute != nil {
		toSerialize["firstname_attribute"] = o.FirstnameAttribute
	}
	return json.Marshal(toSerialize)
}

type NullableClaimsMapping struct {
	value *ClaimsMapping
	isSet bool
}

func (v NullableClaimsMapping) Get() *ClaimsMapping {
	return v.value
}

func (v *NullableClaimsMapping) Set(val *ClaimsMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableClaimsMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableClaimsMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClaimsMapping(val *ClaimsMapping) *NullableClaimsMapping {
	return &NullableClaimsMapping{value: val, isSet: true}
}

func (v NullableClaimsMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClaimsMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



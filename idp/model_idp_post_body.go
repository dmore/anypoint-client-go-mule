/*
 * Identity Provider Management API
 *
 * Description of Identity Provider API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package idp

import (
	"encoding/json"
)

// IdpPostBody struct for IdpPostBody
type IdpPostBody struct {
	Name *string `json:"name,omitempty"`
	Type *IdpPostBodyType `json:"type,omitempty"`
	OidcProvider *OidcProvider `json:"oidc_provider,omitempty"`
}

// NewIdpPostBody instantiates a new IdpPostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdpPostBody() *IdpPostBody {
	this := IdpPostBody{}
	return &this
}

// NewIdpPostBodyWithDefaults instantiates a new IdpPostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdpPostBodyWithDefaults() *IdpPostBody {
	this := IdpPostBody{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdpPostBody) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpPostBody) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdpPostBody) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdpPostBody) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IdpPostBody) GetType() IdpPostBodyType {
	if o == nil || o.Type == nil {
		var ret IdpPostBodyType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpPostBody) GetTypeOk() (*IdpPostBodyType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IdpPostBody) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given IdpPostBodyType and assigns it to the Type field.
func (o *IdpPostBody) SetType(v IdpPostBodyType) {
	o.Type = &v
}

// GetOidcProvider returns the OidcProvider field value if set, zero value otherwise.
func (o *IdpPostBody) GetOidcProvider() OidcProvider {
	if o == nil || o.OidcProvider == nil {
		var ret OidcProvider
		return ret
	}
	return *o.OidcProvider
}

// GetOidcProviderOk returns a tuple with the OidcProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpPostBody) GetOidcProviderOk() (*OidcProvider, bool) {
	if o == nil || o.OidcProvider == nil {
		return nil, false
	}
	return o.OidcProvider, true
}

// HasOidcProvider returns a boolean if a field has been set.
func (o *IdpPostBody) HasOidcProvider() bool {
	if o != nil && o.OidcProvider != nil {
		return true
	}

	return false
}

// SetOidcProvider gets a reference to the given OidcProvider and assigns it to the OidcProvider field.
func (o *IdpPostBody) SetOidcProvider(v OidcProvider) {
	o.OidcProvider = &v
}

func (o IdpPostBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.OidcProvider != nil {
		toSerialize["oidc_provider"] = o.OidcProvider
	}
	return json.Marshal(toSerialize)
}

type NullableIdpPostBody struct {
	value *IdpPostBody
	isSet bool
}

func (v NullableIdpPostBody) Get() *IdpPostBody {
	return v.value
}

func (v *NullableIdpPostBody) Set(val *IdpPostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableIdpPostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableIdpPostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdpPostBody(val *IdpPostBody) *NullableIdpPostBody {
	return &NullableIdpPostBody{value: val, isSet: true}
}

func (v NullableIdpPostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdpPostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Identity Provider Management API
 *
 * Description of Identity Provider API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package idp

import (
	"encoding/json"
)

// Saml struct for Saml
type Saml struct {
	Issuer *string `json:"issuer,omitempty"`
	Audience *string `json:"audience,omitempty"`
	PublicKey *[]string `json:"public_key,omitempty"`
	ClaimsMapping *ClaimsMapping `json:"claims_mapping,omitempty"`
	SpInitiatedSsoEnabled *bool `json:"sp_initiated_sso_enabled,omitempty"`
	IdpInitiatedSsoEnabled *bool `json:"idp_initiated_sso_enabled,omitempty"`
	RequireEncryptedSamlAssertions *bool `json:"require_encrypted_saml_assertions,omitempty"`
}

// NewSaml instantiates a new Saml object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaml() *Saml {
	this := Saml{}
	return &this
}

// NewSamlWithDefaults instantiates a new Saml object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlWithDefaults() *Saml {
	this := Saml{}
	return &this
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *Saml) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Saml) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *Saml) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *Saml) SetIssuer(v string) {
	o.Issuer = &v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *Saml) GetAudience() string {
	if o == nil || o.Audience == nil {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Saml) GetAudienceOk() (*string, bool) {
	if o == nil || o.Audience == nil {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *Saml) HasAudience() bool {
	if o != nil && o.Audience != nil {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *Saml) SetAudience(v string) {
	o.Audience = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *Saml) GetPublicKey() []string {
	if o == nil || o.PublicKey == nil {
		var ret []string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Saml) GetPublicKeyOk() (*[]string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *Saml) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given []string and assigns it to the PublicKey field.
func (o *Saml) SetPublicKey(v []string) {
	o.PublicKey = &v
}

// GetClaimsMapping returns the ClaimsMapping field value if set, zero value otherwise.
func (o *Saml) GetClaimsMapping() ClaimsMapping {
	if o == nil || o.ClaimsMapping == nil {
		var ret ClaimsMapping
		return ret
	}
	return *o.ClaimsMapping
}

// GetClaimsMappingOk returns a tuple with the ClaimsMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Saml) GetClaimsMappingOk() (*ClaimsMapping, bool) {
	if o == nil || o.ClaimsMapping == nil {
		return nil, false
	}
	return o.ClaimsMapping, true
}

// HasClaimsMapping returns a boolean if a field has been set.
func (o *Saml) HasClaimsMapping() bool {
	if o != nil && o.ClaimsMapping != nil {
		return true
	}

	return false
}

// SetClaimsMapping gets a reference to the given ClaimsMapping and assigns it to the ClaimsMapping field.
func (o *Saml) SetClaimsMapping(v ClaimsMapping) {
	o.ClaimsMapping = &v
}

// GetSpInitiatedSsoEnabled returns the SpInitiatedSsoEnabled field value if set, zero value otherwise.
func (o *Saml) GetSpInitiatedSsoEnabled() bool {
	if o == nil || o.SpInitiatedSsoEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SpInitiatedSsoEnabled
}

// GetSpInitiatedSsoEnabledOk returns a tuple with the SpInitiatedSsoEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Saml) GetSpInitiatedSsoEnabledOk() (*bool, bool) {
	if o == nil || o.SpInitiatedSsoEnabled == nil {
		return nil, false
	}
	return o.SpInitiatedSsoEnabled, true
}

// HasSpInitiatedSsoEnabled returns a boolean if a field has been set.
func (o *Saml) HasSpInitiatedSsoEnabled() bool {
	if o != nil && o.SpInitiatedSsoEnabled != nil {
		return true
	}

	return false
}

// SetSpInitiatedSsoEnabled gets a reference to the given bool and assigns it to the SpInitiatedSsoEnabled field.
func (o *Saml) SetSpInitiatedSsoEnabled(v bool) {
	o.SpInitiatedSsoEnabled = &v
}

// GetIdpInitiatedSsoEnabled returns the IdpInitiatedSsoEnabled field value if set, zero value otherwise.
func (o *Saml) GetIdpInitiatedSsoEnabled() bool {
	if o == nil || o.IdpInitiatedSsoEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IdpInitiatedSsoEnabled
}

// GetIdpInitiatedSsoEnabledOk returns a tuple with the IdpInitiatedSsoEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Saml) GetIdpInitiatedSsoEnabledOk() (*bool, bool) {
	if o == nil || o.IdpInitiatedSsoEnabled == nil {
		return nil, false
	}
	return o.IdpInitiatedSsoEnabled, true
}

// HasIdpInitiatedSsoEnabled returns a boolean if a field has been set.
func (o *Saml) HasIdpInitiatedSsoEnabled() bool {
	if o != nil && o.IdpInitiatedSsoEnabled != nil {
		return true
	}

	return false
}

// SetIdpInitiatedSsoEnabled gets a reference to the given bool and assigns it to the IdpInitiatedSsoEnabled field.
func (o *Saml) SetIdpInitiatedSsoEnabled(v bool) {
	o.IdpInitiatedSsoEnabled = &v
}

// GetRequireEncryptedSamlAssertions returns the RequireEncryptedSamlAssertions field value if set, zero value otherwise.
func (o *Saml) GetRequireEncryptedSamlAssertions() bool {
	if o == nil || o.RequireEncryptedSamlAssertions == nil {
		var ret bool
		return ret
	}
	return *o.RequireEncryptedSamlAssertions
}

// GetRequireEncryptedSamlAssertionsOk returns a tuple with the RequireEncryptedSamlAssertions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Saml) GetRequireEncryptedSamlAssertionsOk() (*bool, bool) {
	if o == nil || o.RequireEncryptedSamlAssertions == nil {
		return nil, false
	}
	return o.RequireEncryptedSamlAssertions, true
}

// HasRequireEncryptedSamlAssertions returns a boolean if a field has been set.
func (o *Saml) HasRequireEncryptedSamlAssertions() bool {
	if o != nil && o.RequireEncryptedSamlAssertions != nil {
		return true
	}

	return false
}

// SetRequireEncryptedSamlAssertions gets a reference to the given bool and assigns it to the RequireEncryptedSamlAssertions field.
func (o *Saml) SetRequireEncryptedSamlAssertions(v bool) {
	o.RequireEncryptedSamlAssertions = &v
}

func (o Saml) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Issuer != nil {
		toSerialize["issuer"] = o.Issuer
	}
	if o.Audience != nil {
		toSerialize["audience"] = o.Audience
	}
	if o.PublicKey != nil {
		toSerialize["public_key"] = o.PublicKey
	}
	if o.ClaimsMapping != nil {
		toSerialize["claims_mapping"] = o.ClaimsMapping
	}
	if o.SpInitiatedSsoEnabled != nil {
		toSerialize["sp_initiated_sso_enabled"] = o.SpInitiatedSsoEnabled
	}
	if o.IdpInitiatedSsoEnabled != nil {
		toSerialize["idp_initiated_sso_enabled"] = o.IdpInitiatedSsoEnabled
	}
	if o.RequireEncryptedSamlAssertions != nil {
		toSerialize["require_encrypted_saml_assertions"] = o.RequireEncryptedSamlAssertions
	}
	return json.Marshal(toSerialize)
}

type NullableSaml struct {
	value *Saml
	isSet bool
}

func (v NullableSaml) Get() *Saml {
	return v.value
}

func (v *NullableSaml) Set(val *Saml) {
	v.value = val
	v.isSet = true
}

func (v NullableSaml) IsSet() bool {
	return v.isSet
}

func (v *NullableSaml) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSaml(val *Saml) *NullableSaml {
	return &NullableSaml{value: val, isSet: true}
}

func (v NullableSaml) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSaml) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



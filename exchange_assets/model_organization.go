/*
 * Exchange Assets
 *
 * Description of the Exchange Assets API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package exchange_assets

import (
	"encoding/json"
)

// Organization struct for Organization
type Organization struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	ParentOrganizationIds *[]string `json:"parentOrganizationIds,omitempty"`
	SubOrganizationIds *[]string `json:"subOrganizationIds,omitempty"`
	TenantOrganizationIds *[]string `json:"tenantOrganizationIds,omitempty"`
	IsMaster *bool `json:"isMaster,omitempty"`
	Domain *string `json:"domain,omitempty"`
	IsMulesoftOrganization *bool `json:"isMulesoftOrganization,omitempty"`
}

// NewOrganization instantiates a new Organization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganization() *Organization {
	this := Organization{}
	return &this
}

// NewOrganizationWithDefaults instantiates a new Organization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationWithDefaults() *Organization {
	this := Organization{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Organization) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Organization) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Organization) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Organization) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Organization) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Organization) SetName(v string) {
	o.Name = &v
}

// GetParentOrganizationIds returns the ParentOrganizationIds field value if set, zero value otherwise.
func (o *Organization) GetParentOrganizationIds() []string {
	if o == nil || o.ParentOrganizationIds == nil {
		var ret []string
		return ret
	}
	return *o.ParentOrganizationIds
}

// GetParentOrganizationIdsOk returns a tuple with the ParentOrganizationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetParentOrganizationIdsOk() (*[]string, bool) {
	if o == nil || o.ParentOrganizationIds == nil {
		return nil, false
	}
	return o.ParentOrganizationIds, true
}

// HasParentOrganizationIds returns a boolean if a field has been set.
func (o *Organization) HasParentOrganizationIds() bool {
	if o != nil && o.ParentOrganizationIds != nil {
		return true
	}

	return false
}

// SetParentOrganizationIds gets a reference to the given []string and assigns it to the ParentOrganizationIds field.
func (o *Organization) SetParentOrganizationIds(v []string) {
	o.ParentOrganizationIds = &v
}

// GetSubOrganizationIds returns the SubOrganizationIds field value if set, zero value otherwise.
func (o *Organization) GetSubOrganizationIds() []string {
	if o == nil || o.SubOrganizationIds == nil {
		var ret []string
		return ret
	}
	return *o.SubOrganizationIds
}

// GetSubOrganizationIdsOk returns a tuple with the SubOrganizationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetSubOrganizationIdsOk() (*[]string, bool) {
	if o == nil || o.SubOrganizationIds == nil {
		return nil, false
	}
	return o.SubOrganizationIds, true
}

// HasSubOrganizationIds returns a boolean if a field has been set.
func (o *Organization) HasSubOrganizationIds() bool {
	if o != nil && o.SubOrganizationIds != nil {
		return true
	}

	return false
}

// SetSubOrganizationIds gets a reference to the given []string and assigns it to the SubOrganizationIds field.
func (o *Organization) SetSubOrganizationIds(v []string) {
	o.SubOrganizationIds = &v
}

// GetTenantOrganizationIds returns the TenantOrganizationIds field value if set, zero value otherwise.
func (o *Organization) GetTenantOrganizationIds() []string {
	if o == nil || o.TenantOrganizationIds == nil {
		var ret []string
		return ret
	}
	return *o.TenantOrganizationIds
}

// GetTenantOrganizationIdsOk returns a tuple with the TenantOrganizationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetTenantOrganizationIdsOk() (*[]string, bool) {
	if o == nil || o.TenantOrganizationIds == nil {
		return nil, false
	}
	return o.TenantOrganizationIds, true
}

// HasTenantOrganizationIds returns a boolean if a field has been set.
func (o *Organization) HasTenantOrganizationIds() bool {
	if o != nil && o.TenantOrganizationIds != nil {
		return true
	}

	return false
}

// SetTenantOrganizationIds gets a reference to the given []string and assigns it to the TenantOrganizationIds field.
func (o *Organization) SetTenantOrganizationIds(v []string) {
	o.TenantOrganizationIds = &v
}

// GetIsMaster returns the IsMaster field value if set, zero value otherwise.
func (o *Organization) GetIsMaster() bool {
	if o == nil || o.IsMaster == nil {
		var ret bool
		return ret
	}
	return *o.IsMaster
}

// GetIsMasterOk returns a tuple with the IsMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIsMasterOk() (*bool, bool) {
	if o == nil || o.IsMaster == nil {
		return nil, false
	}
	return o.IsMaster, true
}

// HasIsMaster returns a boolean if a field has been set.
func (o *Organization) HasIsMaster() bool {
	if o != nil && o.IsMaster != nil {
		return true
	}

	return false
}

// SetIsMaster gets a reference to the given bool and assigns it to the IsMaster field.
func (o *Organization) SetIsMaster(v bool) {
	o.IsMaster = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *Organization) GetDomain() string {
	if o == nil || o.Domain == nil {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetDomainOk() (*string, bool) {
	if o == nil || o.Domain == nil {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *Organization) HasDomain() bool {
	if o != nil && o.Domain != nil {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *Organization) SetDomain(v string) {
	o.Domain = &v
}

// GetIsMulesoftOrganization returns the IsMulesoftOrganization field value if set, zero value otherwise.
func (o *Organization) GetIsMulesoftOrganization() bool {
	if o == nil || o.IsMulesoftOrganization == nil {
		var ret bool
		return ret
	}
	return *o.IsMulesoftOrganization
}

// GetIsMulesoftOrganizationOk returns a tuple with the IsMulesoftOrganization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIsMulesoftOrganizationOk() (*bool, bool) {
	if o == nil || o.IsMulesoftOrganization == nil {
		return nil, false
	}
	return o.IsMulesoftOrganization, true
}

// HasIsMulesoftOrganization returns a boolean if a field has been set.
func (o *Organization) HasIsMulesoftOrganization() bool {
	if o != nil && o.IsMulesoftOrganization != nil {
		return true
	}

	return false
}

// SetIsMulesoftOrganization gets a reference to the given bool and assigns it to the IsMulesoftOrganization field.
func (o *Organization) SetIsMulesoftOrganization(v bool) {
	o.IsMulesoftOrganization = &v
}

func (o Organization) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ParentOrganizationIds != nil {
		toSerialize["parentOrganizationIds"] = o.ParentOrganizationIds
	}
	if o.SubOrganizationIds != nil {
		toSerialize["subOrganizationIds"] = o.SubOrganizationIds
	}
	if o.TenantOrganizationIds != nil {
		toSerialize["tenantOrganizationIds"] = o.TenantOrganizationIds
	}
	if o.IsMaster != nil {
		toSerialize["isMaster"] = o.IsMaster
	}
	if o.Domain != nil {
		toSerialize["domain"] = o.Domain
	}
	if o.IsMulesoftOrganization != nil {
		toSerialize["isMulesoftOrganization"] = o.IsMulesoftOrganization
	}
	return json.Marshal(toSerialize)
}

type NullableOrganization struct {
	value *Organization
	isSet bool
}

func (v NullableOrganization) Get() *Organization {
	return v.value
}

func (v *NullableOrganization) Set(val *Organization) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganization(val *Organization) *NullableOrganization {
	return &NullableOrganization{value: val, isSet: true}
}

func (v NullableOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * RoleGroup API
 *
 * Description of the RoleGroup API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rolegroup

import (
	"encoding/json"
)

// RolegroupPutBody struct for RolegroupPutBody
type RolegroupPutBody struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	ExternalNames *[]string `json:"external_names,omitempty"`
}

// NewRolegroupPutBody instantiates a new RolegroupPutBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolegroupPutBody() *RolegroupPutBody {
	this := RolegroupPutBody{}
	return &this
}

// NewRolegroupPutBodyWithDefaults instantiates a new RolegroupPutBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolegroupPutBodyWithDefaults() *RolegroupPutBody {
	this := RolegroupPutBody{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RolegroupPutBody) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolegroupPutBody) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RolegroupPutBody) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RolegroupPutBody) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RolegroupPutBody) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolegroupPutBody) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RolegroupPutBody) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RolegroupPutBody) SetDescription(v string) {
	o.Description = &v
}

// GetExternalNames returns the ExternalNames field value if set, zero value otherwise.
func (o *RolegroupPutBody) GetExternalNames() []string {
	if o == nil || o.ExternalNames == nil {
		var ret []string
		return ret
	}
	return *o.ExternalNames
}

// GetExternalNamesOk returns a tuple with the ExternalNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolegroupPutBody) GetExternalNamesOk() (*[]string, bool) {
	if o == nil || o.ExternalNames == nil {
		return nil, false
	}
	return o.ExternalNames, true
}

// HasExternalNames returns a boolean if a field has been set.
func (o *RolegroupPutBody) HasExternalNames() bool {
	if o != nil && o.ExternalNames != nil {
		return true
	}

	return false
}

// SetExternalNames gets a reference to the given []string and assigns it to the ExternalNames field.
func (o *RolegroupPutBody) SetExternalNames(v []string) {
	o.ExternalNames = &v
}

func (o RolegroupPutBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ExternalNames != nil {
		toSerialize["external_names"] = o.ExternalNames
	}
	return json.Marshal(toSerialize)
}

type NullableRolegroupPutBody struct {
	value *RolegroupPutBody
	isSet bool
}

func (v NullableRolegroupPutBody) Get() *RolegroupPutBody {
	return v.value
}

func (v *NullableRolegroupPutBody) Set(val *RolegroupPutBody) {
	v.value = val
	v.isSet = true
}

func (v NullableRolegroupPutBody) IsSet() bool {
	return v.isSet
}

func (v *NullableRolegroupPutBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolegroupPutBody(val *RolegroupPutBody) *NullableRolegroupPutBody {
	return &NullableRolegroupPutBody{value: val, isSet: true}
}

func (v NullableRolegroupPutBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolegroupPutBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Dedicated Load Balancer API
 *
 * Description of the DLB API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dlb

import (
	"encoding/json"
)

// DlbPostBody struct for DlbPostBody
type DlbPostBody struct {
	Name *string `json:"name,omitempty"`
	// dlb state
	State *string `json:"state,omitempty"`
	IpWhitelist *[]string `json:"ipWhitelist,omitempty"`
	HttpMode *string `json:"httpMode,omitempty"`
	Tlsv1 *bool `json:"tlsv1,omitempty"`
	SslEndpoints *[]DlbPostBodySslEndpoints `json:"sslEndpoints,omitempty"`
}

// NewDlbPostBody instantiates a new DlbPostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDlbPostBody() *DlbPostBody {
	this := DlbPostBody{}
	var state string = "STOPPED"
	this.State = &state
	var httpMode string = "redirect"
	this.HttpMode = &httpMode
	return &this
}

// NewDlbPostBodyWithDefaults instantiates a new DlbPostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDlbPostBodyWithDefaults() *DlbPostBody {
	this := DlbPostBody{}
	var state string = "STOPPED"
	this.State = &state
	var httpMode string = "redirect"
	this.HttpMode = &httpMode
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DlbPostBody) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DlbPostBody) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DlbPostBody) SetName(v string) {
	o.Name = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *DlbPostBody) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *DlbPostBody) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *DlbPostBody) SetState(v string) {
	o.State = &v
}

// GetIpWhitelist returns the IpWhitelist field value if set, zero value otherwise.
func (o *DlbPostBody) GetIpWhitelist() []string {
	if o == nil || o.IpWhitelist == nil {
		var ret []string
		return ret
	}
	return *o.IpWhitelist
}

// GetIpWhitelistOk returns a tuple with the IpWhitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetIpWhitelistOk() (*[]string, bool) {
	if o == nil || o.IpWhitelist == nil {
		return nil, false
	}
	return o.IpWhitelist, true
}

// HasIpWhitelist returns a boolean if a field has been set.
func (o *DlbPostBody) HasIpWhitelist() bool {
	if o != nil && o.IpWhitelist != nil {
		return true
	}

	return false
}

// SetIpWhitelist gets a reference to the given []string and assigns it to the IpWhitelist field.
func (o *DlbPostBody) SetIpWhitelist(v []string) {
	o.IpWhitelist = &v
}

// GetHttpMode returns the HttpMode field value if set, zero value otherwise.
func (o *DlbPostBody) GetHttpMode() string {
	if o == nil || o.HttpMode == nil {
		var ret string
		return ret
	}
	return *o.HttpMode
}

// GetHttpModeOk returns a tuple with the HttpMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetHttpModeOk() (*string, bool) {
	if o == nil || o.HttpMode == nil {
		return nil, false
	}
	return o.HttpMode, true
}

// HasHttpMode returns a boolean if a field has been set.
func (o *DlbPostBody) HasHttpMode() bool {
	if o != nil && o.HttpMode != nil {
		return true
	}

	return false
}

// SetHttpMode gets a reference to the given string and assigns it to the HttpMode field.
func (o *DlbPostBody) SetHttpMode(v string) {
	o.HttpMode = &v
}

// GetTlsv1 returns the Tlsv1 field value if set, zero value otherwise.
func (o *DlbPostBody) GetTlsv1() bool {
	if o == nil || o.Tlsv1 == nil {
		var ret bool
		return ret
	}
	return *o.Tlsv1
}

// GetTlsv1Ok returns a tuple with the Tlsv1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetTlsv1Ok() (*bool, bool) {
	if o == nil || o.Tlsv1 == nil {
		return nil, false
	}
	return o.Tlsv1, true
}

// HasTlsv1 returns a boolean if a field has been set.
func (o *DlbPostBody) HasTlsv1() bool {
	if o != nil && o.Tlsv1 != nil {
		return true
	}

	return false
}

// SetTlsv1 gets a reference to the given bool and assigns it to the Tlsv1 field.
func (o *DlbPostBody) SetTlsv1(v bool) {
	o.Tlsv1 = &v
}

// GetSslEndpoints returns the SslEndpoints field value if set, zero value otherwise.
func (o *DlbPostBody) GetSslEndpoints() []DlbPostBodySslEndpoints {
	if o == nil || o.SslEndpoints == nil {
		var ret []DlbPostBodySslEndpoints
		return ret
	}
	return *o.SslEndpoints
}

// GetSslEndpointsOk returns a tuple with the SslEndpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetSslEndpointsOk() (*[]DlbPostBodySslEndpoints, bool) {
	if o == nil || o.SslEndpoints == nil {
		return nil, false
	}
	return o.SslEndpoints, true
}

// HasSslEndpoints returns a boolean if a field has been set.
func (o *DlbPostBody) HasSslEndpoints() bool {
	if o != nil && o.SslEndpoints != nil {
		return true
	}

	return false
}

// SetSslEndpoints gets a reference to the given []DlbPostBodySslEndpoints and assigns it to the SslEndpoints field.
func (o *DlbPostBody) SetSslEndpoints(v []DlbPostBodySslEndpoints) {
	o.SslEndpoints = &v
}

func (o DlbPostBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.IpWhitelist != nil {
		toSerialize["ipWhitelist"] = o.IpWhitelist
	}
	if o.HttpMode != nil {
		toSerialize["httpMode"] = o.HttpMode
	}
	if o.Tlsv1 != nil {
		toSerialize["tlsv1"] = o.Tlsv1
	}
	if o.SslEndpoints != nil {
		toSerialize["sslEndpoints"] = o.SslEndpoints
	}
	return json.Marshal(toSerialize)
}

type NullableDlbPostBody struct {
	value *DlbPostBody
	isSet bool
}

func (v NullableDlbPostBody) Get() *DlbPostBody {
	return v.value
}

func (v *NullableDlbPostBody) Set(val *DlbPostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableDlbPostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableDlbPostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDlbPostBody(val *DlbPostBody) *NullableDlbPostBody {
	return &NullableDlbPostBody{value: val, isSet: true}
}

func (v NullableDlbPostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDlbPostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



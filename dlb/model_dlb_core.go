/*
 * Dedicated Load Balancer API
 *
 * Description of the DLB API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dlb

import (
	"encoding/json"
)

// DlbCore struct for DlbCore
type DlbCore struct {
	Name *string `json:"name,omitempty"`
	// dlb state
	State *string `json:"state,omitempty"`
	IpWhitelist *[]string `json:"ipWhitelist,omitempty"`
	HttpMode *string `json:"httpMode,omitempty"`
	DefaultSslEndpoint *int32 `json:"defaultSslEndpoint,omitempty"`
	Tlsv1 *bool `json:"tlsv1,omitempty"`
	SslEndpoints *[]DlbCoreSslEndpoints `json:"sslEndpoints,omitempty"`
}

// NewDlbCore instantiates a new DlbCore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDlbCore() *DlbCore {
	this := DlbCore{}
	var state string = "STOPPED"
	this.State = &state
	var httpMode string = "redirect"
	this.HttpMode = &httpMode
	var defaultSslEndpoint int32 = 0
	this.DefaultSslEndpoint = &defaultSslEndpoint
	return &this
}

// NewDlbCoreWithDefaults instantiates a new DlbCore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDlbCoreWithDefaults() *DlbCore {
	this := DlbCore{}
	var state string = "STOPPED"
	this.State = &state
	var httpMode string = "redirect"
	this.HttpMode = &httpMode
	var defaultSslEndpoint int32 = 0
	this.DefaultSslEndpoint = &defaultSslEndpoint
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DlbCore) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCore) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DlbCore) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DlbCore) SetName(v string) {
	o.Name = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *DlbCore) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCore) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *DlbCore) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *DlbCore) SetState(v string) {
	o.State = &v
}

// GetIpWhitelist returns the IpWhitelist field value if set, zero value otherwise.
func (o *DlbCore) GetIpWhitelist() []string {
	if o == nil || o.IpWhitelist == nil {
		var ret []string
		return ret
	}
	return *o.IpWhitelist
}

// GetIpWhitelistOk returns a tuple with the IpWhitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCore) GetIpWhitelistOk() (*[]string, bool) {
	if o == nil || o.IpWhitelist == nil {
		return nil, false
	}
	return o.IpWhitelist, true
}

// HasIpWhitelist returns a boolean if a field has been set.
func (o *DlbCore) HasIpWhitelist() bool {
	if o != nil && o.IpWhitelist != nil {
		return true
	}

	return false
}

// SetIpWhitelist gets a reference to the given []string and assigns it to the IpWhitelist field.
func (o *DlbCore) SetIpWhitelist(v []string) {
	o.IpWhitelist = &v
}

// GetHttpMode returns the HttpMode field value if set, zero value otherwise.
func (o *DlbCore) GetHttpMode() string {
	if o == nil || o.HttpMode == nil {
		var ret string
		return ret
	}
	return *o.HttpMode
}

// GetHttpModeOk returns a tuple with the HttpMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCore) GetHttpModeOk() (*string, bool) {
	if o == nil || o.HttpMode == nil {
		return nil, false
	}
	return o.HttpMode, true
}

// HasHttpMode returns a boolean if a field has been set.
func (o *DlbCore) HasHttpMode() bool {
	if o != nil && o.HttpMode != nil {
		return true
	}

	return false
}

// SetHttpMode gets a reference to the given string and assigns it to the HttpMode field.
func (o *DlbCore) SetHttpMode(v string) {
	o.HttpMode = &v
}

// GetDefaultSslEndpoint returns the DefaultSslEndpoint field value if set, zero value otherwise.
func (o *DlbCore) GetDefaultSslEndpoint() int32 {
	if o == nil || o.DefaultSslEndpoint == nil {
		var ret int32
		return ret
	}
	return *o.DefaultSslEndpoint
}

// GetDefaultSslEndpointOk returns a tuple with the DefaultSslEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCore) GetDefaultSslEndpointOk() (*int32, bool) {
	if o == nil || o.DefaultSslEndpoint == nil {
		return nil, false
	}
	return o.DefaultSslEndpoint, true
}

// HasDefaultSslEndpoint returns a boolean if a field has been set.
func (o *DlbCore) HasDefaultSslEndpoint() bool {
	if o != nil && o.DefaultSslEndpoint != nil {
		return true
	}

	return false
}

// SetDefaultSslEndpoint gets a reference to the given int32 and assigns it to the DefaultSslEndpoint field.
func (o *DlbCore) SetDefaultSslEndpoint(v int32) {
	o.DefaultSslEndpoint = &v
}

// GetTlsv1 returns the Tlsv1 field value if set, zero value otherwise.
func (o *DlbCore) GetTlsv1() bool {
	if o == nil || o.Tlsv1 == nil {
		var ret bool
		return ret
	}
	return *o.Tlsv1
}

// GetTlsv1Ok returns a tuple with the Tlsv1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCore) GetTlsv1Ok() (*bool, bool) {
	if o == nil || o.Tlsv1 == nil {
		return nil, false
	}
	return o.Tlsv1, true
}

// HasTlsv1 returns a boolean if a field has been set.
func (o *DlbCore) HasTlsv1() bool {
	if o != nil && o.Tlsv1 != nil {
		return true
	}

	return false
}

// SetTlsv1 gets a reference to the given bool and assigns it to the Tlsv1 field.
func (o *DlbCore) SetTlsv1(v bool) {
	o.Tlsv1 = &v
}

// GetSslEndpoints returns the SslEndpoints field value if set, zero value otherwise.
func (o *DlbCore) GetSslEndpoints() []DlbCoreSslEndpoints {
	if o == nil || o.SslEndpoints == nil {
		var ret []DlbCoreSslEndpoints
		return ret
	}
	return *o.SslEndpoints
}

// GetSslEndpointsOk returns a tuple with the SslEndpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCore) GetSslEndpointsOk() (*[]DlbCoreSslEndpoints, bool) {
	if o == nil || o.SslEndpoints == nil {
		return nil, false
	}
	return o.SslEndpoints, true
}

// HasSslEndpoints returns a boolean if a field has been set.
func (o *DlbCore) HasSslEndpoints() bool {
	if o != nil && o.SslEndpoints != nil {
		return true
	}

	return false
}

// SetSslEndpoints gets a reference to the given []DlbCoreSslEndpoints and assigns it to the SslEndpoints field.
func (o *DlbCore) SetSslEndpoints(v []DlbCoreSslEndpoints) {
	o.SslEndpoints = &v
}

func (o DlbCore) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.IpWhitelist != nil {
		toSerialize["ipWhitelist"] = o.IpWhitelist
	}
	if o.HttpMode != nil {
		toSerialize["httpMode"] = o.HttpMode
	}
	if o.DefaultSslEndpoint != nil {
		toSerialize["defaultSslEndpoint"] = o.DefaultSslEndpoint
	}
	if o.Tlsv1 != nil {
		toSerialize["tlsv1"] = o.Tlsv1
	}
	if o.SslEndpoints != nil {
		toSerialize["sslEndpoints"] = o.SslEndpoints
	}
	return json.Marshal(toSerialize)
}

type NullableDlbCore struct {
	value *DlbCore
	isSet bool
}

func (v NullableDlbCore) Get() *DlbCore {
	return v.value
}

func (v *NullableDlbCore) Set(val *DlbCore) {
	v.value = val
	v.isSet = true
}

func (v NullableDlbCore) IsSet() bool {
	return v.isSet
}

func (v *NullableDlbCore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDlbCore(val *DlbCore) *NullableDlbCore {
	return &NullableDlbCore{value: val, isSet: true}
}

func (v NullableDlbCore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDlbCore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



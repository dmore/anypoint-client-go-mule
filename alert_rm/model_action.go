/*
 * Alert Runtime Manager
 *
 * Description of the Alert in Runtime Manager API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alert_rm

import (
	"encoding/json"
)

// Action struct for Action
type Action struct {
	Type string `json:"type"`
	Content string `json:"content"`
	Subject string `json:"subject"`
	UserIds []string `json:"userIds"`
}

// NewAction instantiates a new Action object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAction(type_ string, content string, subject string, userIds []string) *Action {
	this := Action{}
	this.Type = type_
	this.Content = content
	this.Subject = subject
	this.UserIds = userIds
	return &this
}

// NewActionWithDefaults instantiates a new Action object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionWithDefaults() *Action {
	this := Action{}
	return &this
}

// GetType returns the Type field value
func (o *Action) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Action) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Action) SetType(v string) {
	o.Type = v
}

// GetContent returns the Content field value
func (o *Action) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *Action) GetContentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *Action) SetContent(v string) {
	o.Content = v
}

// GetSubject returns the Subject field value
func (o *Action) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *Action) GetSubjectOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *Action) SetSubject(v string) {
	o.Subject = v
}

// GetUserIds returns the UserIds field value
func (o *Action) GetUserIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value
// and a boolean to check if the value has been set.
func (o *Action) GetUserIdsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserIds, true
}

// SetUserIds sets field value
func (o *Action) SetUserIds(v []string) {
	o.UserIds = v
}

func (o Action) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["content"] = o.Content
	}
	if true {
		toSerialize["subject"] = o.Subject
	}
	if true {
		toSerialize["userIds"] = o.UserIds
	}
	return json.Marshal(toSerialize)
}

type NullableAction struct {
	value *Action
	isSet bool
}

func (v NullableAction) Get() *Action {
	return v.value
}

func (v *NullableAction) Set(val *Action) {
	v.value = val
	v.isSet = true
}

func (v NullableAction) IsSet() bool {
	return v.isSet
}

func (v *NullableAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAction(val *Action) *NullableAction {
	return &NullableAction{value: val, isSet: true}
}

func (v NullableAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



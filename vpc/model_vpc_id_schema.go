/*
 * VPC API
 *
 * Description of the VPC API
 *
 * API version: 1.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
)

// VpcIdSchema struct for VpcIdSchema
type VpcIdSchema struct {
	// The vpc Id
	Id string `json:"id"`
}

// NewVpcIdSchema instantiates a new VpcIdSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpcIdSchema(id string) *VpcIdSchema {
	this := VpcIdSchema{}
	this.Id = id
	return &this
}

// NewVpcIdSchemaWithDefaults instantiates a new VpcIdSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpcIdSchemaWithDefaults() *VpcIdSchema {
	this := VpcIdSchema{}
	return &this
}

// GetId returns the Id field value
func (o *VpcIdSchema) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VpcIdSchema) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VpcIdSchema) SetId(v string) {
	o.Id = v
}

func (o VpcIdSchema) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableVpcIdSchema struct {
	value *VpcIdSchema
	isSet bool
}

func (v NullableVpcIdSchema) Get() *VpcIdSchema {
	return v.value
}

func (v *NullableVpcIdSchema) Set(val *VpcIdSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableVpcIdSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableVpcIdSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpcIdSchema(val *VpcIdSchema) *NullableVpcIdSchema {
	return &NullableVpcIdSchema{value: val, isSet: true}
}

func (v NullableVpcIdSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpcIdSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



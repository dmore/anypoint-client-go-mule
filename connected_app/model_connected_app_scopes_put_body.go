/*
 * Connected App API
 *
 * Description of the Connected App API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package connected_app

import (
	"encoding/json"
)

// ConnectedAppScopesPutBody struct for ConnectedAppScopesPutBody
type ConnectedAppScopesPutBody struct {
	Scopes *[]ScopeCore `json:"scopes,omitempty"`
}

// NewConnectedAppScopesPutBody instantiates a new ConnectedAppScopesPutBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectedAppScopesPutBody() *ConnectedAppScopesPutBody {
	this := ConnectedAppScopesPutBody{}
	return &this
}

// NewConnectedAppScopesPutBodyWithDefaults instantiates a new ConnectedAppScopesPutBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectedAppScopesPutBodyWithDefaults() *ConnectedAppScopesPutBody {
	this := ConnectedAppScopesPutBody{}
	return &this
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *ConnectedAppScopesPutBody) GetScopes() []ScopeCore {
	if o == nil || o.Scopes == nil {
		var ret []ScopeCore
		return ret
	}
	return *o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectedAppScopesPutBody) GetScopesOk() (*[]ScopeCore, bool) {
	if o == nil || o.Scopes == nil {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *ConnectedAppScopesPutBody) HasScopes() bool {
	if o != nil && o.Scopes != nil {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []ScopeCore and assigns it to the Scopes field.
func (o *ConnectedAppScopesPutBody) SetScopes(v []ScopeCore) {
	o.Scopes = &v
}

func (o ConnectedAppScopesPutBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	return json.Marshal(toSerialize)
}

type NullableConnectedAppScopesPutBody struct {
	value *ConnectedAppScopesPutBody
	isSet bool
}

func (v NullableConnectedAppScopesPutBody) Get() *ConnectedAppScopesPutBody {
	return v.value
}

func (v *NullableConnectedAppScopesPutBody) Set(val *ConnectedAppScopesPutBody) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectedAppScopesPutBody) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectedAppScopesPutBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectedAppScopesPutBody(val *ConnectedAppScopesPutBody) *NullableConnectedAppScopesPutBody {
	return &NullableConnectedAppScopesPutBody{value: val, isSet: true}
}

func (v NullableConnectedAppScopesPutBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectedAppScopesPutBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



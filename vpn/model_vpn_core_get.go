/*
 * VPN API
 *
 * Description of the VPN API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpn

import (
	"encoding/json"
)

// VpnCoreGet struct for VpnCoreGet
type VpnCoreGet struct {
	Spec *Spec `json:"spec,omitempty"`
	State *State `json:"state,omitempty"`
	UpdateAvailable *bool `json:"updateAvailable,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewVpnCoreGet instantiates a new VpnCoreGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpnCoreGet() *VpnCoreGet {
	this := VpnCoreGet{}
	var updateAvailable bool = false
	this.UpdateAvailable = &updateAvailable
	return &this
}

// NewVpnCoreGetWithDefaults instantiates a new VpnCoreGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpnCoreGetWithDefaults() *VpnCoreGet {
	this := VpnCoreGet{}
	var updateAvailable bool = false
	this.UpdateAvailable = &updateAvailable
	return &this
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *VpnCoreGet) GetSpec() Spec {
	if o == nil || o.Spec == nil {
		var ret Spec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnCoreGet) GetSpecOk() (*Spec, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *VpnCoreGet) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given Spec and assigns it to the Spec field.
func (o *VpnCoreGet) SetSpec(v Spec) {
	o.Spec = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *VpnCoreGet) GetState() State {
	if o == nil || o.State == nil {
		var ret State
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnCoreGet) GetStateOk() (*State, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *VpnCoreGet) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given State and assigns it to the State field.
func (o *VpnCoreGet) SetState(v State) {
	o.State = &v
}

// GetUpdateAvailable returns the UpdateAvailable field value if set, zero value otherwise.
func (o *VpnCoreGet) GetUpdateAvailable() bool {
	if o == nil || o.UpdateAvailable == nil {
		var ret bool
		return ret
	}
	return *o.UpdateAvailable
}

// GetUpdateAvailableOk returns a tuple with the UpdateAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnCoreGet) GetUpdateAvailableOk() (*bool, bool) {
	if o == nil || o.UpdateAvailable == nil {
		return nil, false
	}
	return o.UpdateAvailable, true
}

// HasUpdateAvailable returns a boolean if a field has been set.
func (o *VpnCoreGet) HasUpdateAvailable() bool {
	if o != nil && o.UpdateAvailable != nil {
		return true
	}

	return false
}

// SetUpdateAvailable gets a reference to the given bool and assigns it to the UpdateAvailable field.
func (o *VpnCoreGet) SetUpdateAvailable(v bool) {
	o.UpdateAvailable = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VpnCoreGet) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnCoreGet) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VpnCoreGet) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VpnCoreGet) SetName(v string) {
	o.Name = &v
}

func (o VpnCoreGet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.UpdateAvailable != nil {
		toSerialize["updateAvailable"] = o.UpdateAvailable
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableVpnCoreGet struct {
	value *VpnCoreGet
	isSet bool
}

func (v NullableVpnCoreGet) Get() *VpnCoreGet {
	return v.value
}

func (v *NullableVpnCoreGet) Set(val *VpnCoreGet) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnCoreGet) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnCoreGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnCoreGet(val *VpnCoreGet) *NullableVpnCoreGet {
	return &NullableVpnCoreGet{value: val, isSet: true}
}

func (v NullableVpnCoreGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnCoreGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



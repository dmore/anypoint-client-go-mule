/*
 * VPN API
 *
 * Description of the VPN API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpn

import (
	"encoding/json"
)

// State struct for State
type State struct {
	VpnConnectionStatus string `json:"vpnConnectionStatus"`
	CreatedAt *string `json:"createdAt,omitempty"`
	RemoteAsn *int32 `json:"remoteAsn,omitempty"`
	LocalAsn *int32 `json:"localAsn,omitempty"`
	VpnTunnels *[]VpnTunnel `json:"vpnTunnels,omitempty"`
	FailedReason *string `json:"failedReason,omitempty"`
}

// NewState instantiates a new State object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewState(vpnConnectionStatus string) *State {
	this := State{}
	this.VpnConnectionStatus = vpnConnectionStatus
	var createdAt string = ""
	this.CreatedAt = &createdAt
	var remoteAsn int32 = 0
	this.RemoteAsn = &remoteAsn
	var localAsn int32 = 0
	this.LocalAsn = &localAsn
	var failedReason string = ""
	this.FailedReason = &failedReason
	return &this
}

// NewStateWithDefaults instantiates a new State object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStateWithDefaults() *State {
	this := State{}
	var vpnConnectionStatus string = ""
	this.VpnConnectionStatus = vpnConnectionStatus
	var createdAt string = ""
	this.CreatedAt = &createdAt
	var remoteAsn int32 = 0
	this.RemoteAsn = &remoteAsn
	var localAsn int32 = 0
	this.LocalAsn = &localAsn
	var failedReason string = ""
	this.FailedReason = &failedReason
	return &this
}

// GetVpnConnectionStatus returns the VpnConnectionStatus field value
func (o *State) GetVpnConnectionStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VpnConnectionStatus
}

// GetVpnConnectionStatusOk returns a tuple with the VpnConnectionStatus field value
// and a boolean to check if the value has been set.
func (o *State) GetVpnConnectionStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VpnConnectionStatus, true
}

// SetVpnConnectionStatus sets field value
func (o *State) SetVpnConnectionStatus(v string) {
	o.VpnConnectionStatus = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *State) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *State) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *State) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *State) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetRemoteAsn returns the RemoteAsn field value if set, zero value otherwise.
func (o *State) GetRemoteAsn() int32 {
	if o == nil || o.RemoteAsn == nil {
		var ret int32
		return ret
	}
	return *o.RemoteAsn
}

// GetRemoteAsnOk returns a tuple with the RemoteAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *State) GetRemoteAsnOk() (*int32, bool) {
	if o == nil || o.RemoteAsn == nil {
		return nil, false
	}
	return o.RemoteAsn, true
}

// HasRemoteAsn returns a boolean if a field has been set.
func (o *State) HasRemoteAsn() bool {
	if o != nil && o.RemoteAsn != nil {
		return true
	}

	return false
}

// SetRemoteAsn gets a reference to the given int32 and assigns it to the RemoteAsn field.
func (o *State) SetRemoteAsn(v int32) {
	o.RemoteAsn = &v
}

// GetLocalAsn returns the LocalAsn field value if set, zero value otherwise.
func (o *State) GetLocalAsn() int32 {
	if o == nil || o.LocalAsn == nil {
		var ret int32
		return ret
	}
	return *o.LocalAsn
}

// GetLocalAsnOk returns a tuple with the LocalAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *State) GetLocalAsnOk() (*int32, bool) {
	if o == nil || o.LocalAsn == nil {
		return nil, false
	}
	return o.LocalAsn, true
}

// HasLocalAsn returns a boolean if a field has been set.
func (o *State) HasLocalAsn() bool {
	if o != nil && o.LocalAsn != nil {
		return true
	}

	return false
}

// SetLocalAsn gets a reference to the given int32 and assigns it to the LocalAsn field.
func (o *State) SetLocalAsn(v int32) {
	o.LocalAsn = &v
}

// GetVpnTunnels returns the VpnTunnels field value if set, zero value otherwise.
func (o *State) GetVpnTunnels() []VpnTunnel {
	if o == nil || o.VpnTunnels == nil {
		var ret []VpnTunnel
		return ret
	}
	return *o.VpnTunnels
}

// GetVpnTunnelsOk returns a tuple with the VpnTunnels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *State) GetVpnTunnelsOk() (*[]VpnTunnel, bool) {
	if o == nil || o.VpnTunnels == nil {
		return nil, false
	}
	return o.VpnTunnels, true
}

// HasVpnTunnels returns a boolean if a field has been set.
func (o *State) HasVpnTunnels() bool {
	if o != nil && o.VpnTunnels != nil {
		return true
	}

	return false
}

// SetVpnTunnels gets a reference to the given []VpnTunnel and assigns it to the VpnTunnels field.
func (o *State) SetVpnTunnels(v []VpnTunnel) {
	o.VpnTunnels = &v
}

// GetFailedReason returns the FailedReason field value if set, zero value otherwise.
func (o *State) GetFailedReason() string {
	if o == nil || o.FailedReason == nil {
		var ret string
		return ret
	}
	return *o.FailedReason
}

// GetFailedReasonOk returns a tuple with the FailedReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *State) GetFailedReasonOk() (*string, bool) {
	if o == nil || o.FailedReason == nil {
		return nil, false
	}
	return o.FailedReason, true
}

// HasFailedReason returns a boolean if a field has been set.
func (o *State) HasFailedReason() bool {
	if o != nil && o.FailedReason != nil {
		return true
	}

	return false
}

// SetFailedReason gets a reference to the given string and assigns it to the FailedReason field.
func (o *State) SetFailedReason(v string) {
	o.FailedReason = &v
}

func (o State) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vpnConnectionStatus"] = o.VpnConnectionStatus
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.RemoteAsn != nil {
		toSerialize["remoteAsn"] = o.RemoteAsn
	}
	if o.LocalAsn != nil {
		toSerialize["localAsn"] = o.LocalAsn
	}
	if o.VpnTunnels != nil {
		toSerialize["vpnTunnels"] = o.VpnTunnels
	}
	if o.FailedReason != nil {
		toSerialize["failedReason"] = o.FailedReason
	}
	return json.Marshal(toSerialize)
}

type NullableState struct {
	value *State
	isSet bool
}

func (v NullableState) Get() *State {
	return v.value
}

func (v *NullableState) Set(val *State) {
	v.value = val
	v.isSet = true
}

func (v NullableState) IsSet() bool {
	return v.isSet
}

func (v *NullableState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableState(val *State) *NullableState {
	return &NullableState{value: val, isSet: true}
}

func (v NullableState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



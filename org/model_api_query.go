/*
 * Organization API
 *
 * Description of the Organization API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// ApiQuery An explanation about the purpose of this instance.
type ApiQuery struct {
	// An explanation about the purpose of this instance.
	Enabled bool `json:"enabled"`
	// An explanation about the purpose of this instance.
	ProductSKU int32 `json:"productSKU"`
}

// NewApiQuery instantiates a new ApiQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiQuery(enabled bool, productSKU int32) *ApiQuery {
	this := ApiQuery{}
	this.Enabled = enabled
	this.ProductSKU = productSKU
	return &this
}

// NewApiQueryWithDefaults instantiates a new ApiQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiQueryWithDefaults() *ApiQuery {
	this := ApiQuery{}
	var enabled bool = false
	this.Enabled = enabled
	var productSKU int32 = 0
	this.ProductSKU = productSKU
	return &this
}

// GetEnabled returns the Enabled field value
func (o *ApiQuery) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ApiQuery) GetEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ApiQuery) SetEnabled(v bool) {
	o.Enabled = v
}

// GetProductSKU returns the ProductSKU field value
func (o *ApiQuery) GetProductSKU() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProductSKU
}

// GetProductSKUOk returns a tuple with the ProductSKU field value
// and a boolean to check if the value has been set.
func (o *ApiQuery) GetProductSKUOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProductSKU, true
}

// SetProductSKU sets field value
func (o *ApiQuery) SetProductSKU(v int32) {
	o.ProductSKU = v
}

func (o ApiQuery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["productSKU"] = o.ProductSKU
	}
	return json.Marshal(toSerialize)
}

type NullableApiQuery struct {
	value *ApiQuery
	isSet bool
}

func (v NullableApiQuery) Get() *ApiQuery {
	return v.value
}

func (v *NullableApiQuery) Set(val *ApiQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableApiQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableApiQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiQuery(val *ApiQuery) *NullableApiQuery {
	return &NullableApiQuery{value: val, isSet: true}
}

func (v NullableApiQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



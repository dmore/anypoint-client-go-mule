/*
 * Organization API
 *
 * Description of the Organization API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// MqMessages An explanation about the purpose of this instance.
type MqMessages struct {
	// An explanation about the purpose of this instance.
	AddOn int32 `json:"addOn"`
	// An explanation about the purpose of this instance.
	Base int32 `json:"base"`
}

// NewMqMessages instantiates a new MqMessages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMqMessages(addOn int32, base int32) *MqMessages {
	this := MqMessages{}
	this.AddOn = addOn
	this.Base = base
	return &this
}

// NewMqMessagesWithDefaults instantiates a new MqMessages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMqMessagesWithDefaults() *MqMessages {
	this := MqMessages{}
	var addOn int32 = 0
	this.AddOn = addOn
	var base int32 = 0
	this.Base = base
	return &this
}

// GetAddOn returns the AddOn field value
func (o *MqMessages) GetAddOn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AddOn
}

// GetAddOnOk returns a tuple with the AddOn field value
// and a boolean to check if the value has been set.
func (o *MqMessages) GetAddOnOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AddOn, true
}

// SetAddOn sets field value
func (o *MqMessages) SetAddOn(v int32) {
	o.AddOn = v
}

// GetBase returns the Base field value
func (o *MqMessages) GetBase() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Base
}

// GetBaseOk returns a tuple with the Base field value
// and a boolean to check if the value has been set.
func (o *MqMessages) GetBaseOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Base, true
}

// SetBase sets field value
func (o *MqMessages) SetBase(v int32) {
	o.Base = v
}

func (o MqMessages) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["addOn"] = o.AddOn
	}
	if true {
		toSerialize["base"] = o.Base
	}
	return json.Marshal(toSerialize)
}

type NullableMqMessages struct {
	value *MqMessages
	isSet bool
}

func (v NullableMqMessages) Get() *MqMessages {
	return v.value
}

func (v *NullableMqMessages) Set(val *MqMessages) {
	v.value = val
	v.isSet = true
}

func (v NullableMqMessages) IsSet() bool {
	return v.isSet
}

func (v *NullableMqMessages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMqMessages(val *MqMessages) *NullableMqMessages {
	return &NullableMqMessages{value: val, isSet: true}
}

func (v NullableMqMessages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMqMessages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



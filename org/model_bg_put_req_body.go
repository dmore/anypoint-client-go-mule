/*
 * Organization API
 *
 * Description of the Organization API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// BGPutReqBody struct for BGPutReqBody
type BGPutReqBody struct {
	Entitlements *EntitlementsCore `json:"entitlements,omitempty"`
	// An explanation about the purpose of this instance.
	Name *string `json:"name,omitempty"`
	// An explanation about the purpose of this instance.
	OwnerId *string `json:"ownerId,omitempty"`
	// An explanation about the purpose of this instance.
	SessionTimeout *int32 `json:"sessionTimeout,omitempty"`
}

// NewBGPutReqBody instantiates a new BGPutReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBGPutReqBody() *BGPutReqBody {
	this := BGPutReqBody{}
	var entitlements EntitlementsCore = {}
	this.Entitlements = &entitlements
	var name string = ""
	this.Name = &name
	var ownerId string = ""
	this.OwnerId = &ownerId
	var sessionTimeout int32 = 0
	this.SessionTimeout = &sessionTimeout
	return &this
}

// NewBGPutReqBodyWithDefaults instantiates a new BGPutReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBGPutReqBodyWithDefaults() *BGPutReqBody {
	this := BGPutReqBody{}
	var entitlements EntitlementsCore = {}
	this.Entitlements = &entitlements
	var name string = ""
	this.Name = &name
	var ownerId string = ""
	this.OwnerId = &ownerId
	var sessionTimeout int32 = 0
	this.SessionTimeout = &sessionTimeout
	return &this
}

// GetEntitlements returns the Entitlements field value if set, zero value otherwise.
func (o *BGPutReqBody) GetEntitlements() EntitlementsCore {
	if o == nil || o.Entitlements == nil {
		var ret EntitlementsCore
		return ret
	}
	return *o.Entitlements
}

// GetEntitlementsOk returns a tuple with the Entitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGPutReqBody) GetEntitlementsOk() (*EntitlementsCore, bool) {
	if o == nil || o.Entitlements == nil {
		return nil, false
	}
	return o.Entitlements, true
}

// HasEntitlements returns a boolean if a field has been set.
func (o *BGPutReqBody) HasEntitlements() bool {
	if o != nil && o.Entitlements != nil {
		return true
	}

	return false
}

// SetEntitlements gets a reference to the given EntitlementsCore and assigns it to the Entitlements field.
func (o *BGPutReqBody) SetEntitlements(v EntitlementsCore) {
	o.Entitlements = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BGPutReqBody) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGPutReqBody) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BGPutReqBody) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BGPutReqBody) SetName(v string) {
	o.Name = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *BGPutReqBody) GetOwnerId() string {
	if o == nil || o.OwnerId == nil {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGPutReqBody) GetOwnerIdOk() (*string, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *BGPutReqBody) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *BGPutReqBody) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetSessionTimeout returns the SessionTimeout field value if set, zero value otherwise.
func (o *BGPutReqBody) GetSessionTimeout() int32 {
	if o == nil || o.SessionTimeout == nil {
		var ret int32
		return ret
	}
	return *o.SessionTimeout
}

// GetSessionTimeoutOk returns a tuple with the SessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGPutReqBody) GetSessionTimeoutOk() (*int32, bool) {
	if o == nil || o.SessionTimeout == nil {
		return nil, false
	}
	return o.SessionTimeout, true
}

// HasSessionTimeout returns a boolean if a field has been set.
func (o *BGPutReqBody) HasSessionTimeout() bool {
	if o != nil && o.SessionTimeout != nil {
		return true
	}

	return false
}

// SetSessionTimeout gets a reference to the given int32 and assigns it to the SessionTimeout field.
func (o *BGPutReqBody) SetSessionTimeout(v int32) {
	o.SessionTimeout = &v
}

func (o BGPutReqBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Entitlements != nil {
		toSerialize["entitlements"] = o.Entitlements
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OwnerId != nil {
		toSerialize["ownerId"] = o.OwnerId
	}
	if o.SessionTimeout != nil {
		toSerialize["sessionTimeout"] = o.SessionTimeout
	}
	return json.Marshal(toSerialize)
}

type NullableBGPutReqBody struct {
	value *BGPutReqBody
	isSet bool
}

func (v NullableBGPutReqBody) Get() *BGPutReqBody {
	return v.value
}

func (v *NullableBGPutReqBody) Set(val *BGPutReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableBGPutReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableBGPutReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBGPutReqBody(val *BGPutReqBody) *NullableBGPutReqBody {
	return &NullableBGPutReqBody{value: val, isSet: true}
}

func (v NullableBGPutReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBGPutReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



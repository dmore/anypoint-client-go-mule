/*
 * Organization API
 *
 * Description of the Organization API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// ObjectStoreRequestUnits An explanation about the purpose of this instance.
type ObjectStoreRequestUnits struct {
	// An explanation about the purpose of this instance.
	AddOn int32 `json:"addOn"`
	// An explanation about the purpose of this instance.
	Base int32 `json:"base"`
}

// NewObjectStoreRequestUnits instantiates a new ObjectStoreRequestUnits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStoreRequestUnits(addOn int32, base int32) *ObjectStoreRequestUnits {
	this := ObjectStoreRequestUnits{}
	this.AddOn = addOn
	this.Base = base
	return &this
}

// NewObjectStoreRequestUnitsWithDefaults instantiates a new ObjectStoreRequestUnits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStoreRequestUnitsWithDefaults() *ObjectStoreRequestUnits {
	this := ObjectStoreRequestUnits{}
	var addOn int32 = 0
	this.AddOn = addOn
	var base int32 = 0
	this.Base = base
	return &this
}

// GetAddOn returns the AddOn field value
func (o *ObjectStoreRequestUnits) GetAddOn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AddOn
}

// GetAddOnOk returns a tuple with the AddOn field value
// and a boolean to check if the value has been set.
func (o *ObjectStoreRequestUnits) GetAddOnOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AddOn, true
}

// SetAddOn sets field value
func (o *ObjectStoreRequestUnits) SetAddOn(v int32) {
	o.AddOn = v
}

// GetBase returns the Base field value
func (o *ObjectStoreRequestUnits) GetBase() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Base
}

// GetBaseOk returns a tuple with the Base field value
// and a boolean to check if the value has been set.
func (o *ObjectStoreRequestUnits) GetBaseOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Base, true
}

// SetBase sets field value
func (o *ObjectStoreRequestUnits) SetBase(v int32) {
	o.Base = v
}

func (o ObjectStoreRequestUnits) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["addOn"] = o.AddOn
	}
	if true {
		toSerialize["base"] = o.Base
	}
	return json.Marshal(toSerialize)
}

type NullableObjectStoreRequestUnits struct {
	value *ObjectStoreRequestUnits
	isSet bool
}

func (v NullableObjectStoreRequestUnits) Get() *ObjectStoreRequestUnits {
	return v.value
}

func (v *NullableObjectStoreRequestUnits) Set(val *ObjectStoreRequestUnits) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStoreRequestUnits) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStoreRequestUnits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStoreRequestUnits(val *ObjectStoreRequestUnits) *NullableObjectStoreRequestUnits {
	return &NullableObjectStoreRequestUnits{value: val, isSet: true}
}

func (v NullableObjectStoreRequestUnits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStoreRequestUnits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



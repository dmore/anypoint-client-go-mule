/*
 * Anypoint MQ Exchange Binding specfication
 *
 * Anypoint MQ Exchange Binding API specification
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ame_binding

import (
	"encoding/json"
)

// ExchangeBinding struct for ExchangeBinding
type ExchangeBinding struct {
	QueueId *string `json:"queueId,omitempty"`
	ExchangeId *string `json:"exchangeId,omitempty"`
}

// NewExchangeBinding instantiates a new ExchangeBinding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangeBinding() *ExchangeBinding {
	this := ExchangeBinding{}
	return &this
}

// NewExchangeBindingWithDefaults instantiates a new ExchangeBinding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangeBindingWithDefaults() *ExchangeBinding {
	this := ExchangeBinding{}
	return &this
}

// GetQueueId returns the QueueId field value if set, zero value otherwise.
func (o *ExchangeBinding) GetQueueId() string {
	if o == nil || o.QueueId == nil {
		var ret string
		return ret
	}
	return *o.QueueId
}

// GetQueueIdOk returns a tuple with the QueueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeBinding) GetQueueIdOk() (*string, bool) {
	if o == nil || o.QueueId == nil {
		return nil, false
	}
	return o.QueueId, true
}

// HasQueueId returns a boolean if a field has been set.
func (o *ExchangeBinding) HasQueueId() bool {
	if o != nil && o.QueueId != nil {
		return true
	}

	return false
}

// SetQueueId gets a reference to the given string and assigns it to the QueueId field.
func (o *ExchangeBinding) SetQueueId(v string) {
	o.QueueId = &v
}

// GetExchangeId returns the ExchangeId field value if set, zero value otherwise.
func (o *ExchangeBinding) GetExchangeId() string {
	if o == nil || o.ExchangeId == nil {
		var ret string
		return ret
	}
	return *o.ExchangeId
}

// GetExchangeIdOk returns a tuple with the ExchangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangeBinding) GetExchangeIdOk() (*string, bool) {
	if o == nil || o.ExchangeId == nil {
		return nil, false
	}
	return o.ExchangeId, true
}

// HasExchangeId returns a boolean if a field has been set.
func (o *ExchangeBinding) HasExchangeId() bool {
	if o != nil && o.ExchangeId != nil {
		return true
	}

	return false
}

// SetExchangeId gets a reference to the given string and assigns it to the ExchangeId field.
func (o *ExchangeBinding) SetExchangeId(v string) {
	o.ExchangeId = &v
}

func (o ExchangeBinding) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.QueueId != nil {
		toSerialize["queueId"] = o.QueueId
	}
	if o.ExchangeId != nil {
		toSerialize["exchangeId"] = o.ExchangeId
	}
	return json.Marshal(toSerialize)
}

type NullableExchangeBinding struct {
	value *ExchangeBinding
	isSet bool
}

func (v NullableExchangeBinding) Get() *ExchangeBinding {
	return v.value
}

func (v *NullableExchangeBinding) Set(val *ExchangeBinding) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangeBinding) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangeBinding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangeBinding(val *ExchangeBinding) *NullableExchangeBinding {
	return &NullableExchangeBinding{value: val, isSet: true}
}

func (v NullableExchangeBinding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangeBinding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


